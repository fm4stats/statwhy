module Multiple_hypotheses
  use cameleerBHL.CameleerBHL
  use ttest.Ttest

  let function p1 = NormalD  (Param "mu1") (Param "var")
  let function p2 = NormalD  (Param "mu2") (Param "var")
  let function p3 = NormalD  (Param "mu3") (Param "var")
  let function p4 = NormalD  (Param "mu4") (Param "var")
  let function p5 = NormalD  (Param "mu5") (Param "var")
  let function p6 = NormalD  (Param "mu6") (Param "var")
  let function p7 = NormalD  (Param "mu7") (Param "var")
  let function p8 = NormalD  (Param "mu8") (Param "var")
  let function p9 = NormalD  (Param "mu9") (Param "var")
  let function p10 = NormalD (Param "mu10") (Param "var")

  let function p1' = NormalD  (Param "mu1'") (Param "var")
  let function p2' = NormalD  (Param "mu2'") (Param "var")
  let function p3' = NormalD  (Param "mu3'") (Param "var")
  let function p4' = NormalD  (Param "mu4'") (Param "var")
  let function p5' = NormalD  (Param "mu5'") (Param "var")
  let function p6' = NormalD  (Param "mu6'") (Param "var")
  let function p7' = NormalD  (Param "mu7'") (Param "var")
  let function p8' = NormalD  (Param "mu8'") (Param "var")
  let function p9' = NormalD  (Param "mu9'") (Param "var")
  let function p10' = NormalD (Param "mu10'") (Param "var")

  let function p1'' = NormalD  (Param "mu1''") (Param "var")
  let function p2'' = NormalD  (Param "mu2''") (Param "var")
  let function p3'' = NormalD  (Param "mu3''") (Param "var")
  let function p4'' = NormalD  (Param "mu4''") (Param "var")
  let function p5'' = NormalD  (Param "mu5''") (Param "var")
  let function p6'' = NormalD  (Param "mu6''") (Param "var")
  let function p7'' = NormalD  (Param "mu7''") (Param "var")
  let function p8'' = NormalD  (Param "mu8''") (Param "var")
  let function p9'' = NormalD  (Param "mu9''") (Param "var")
  let function p10'' = NormalD (Param "mu10''") (Param "var")

  let ex_two_hypotheses_disj d1 d2
    requires {
      is_empty !st /\
      sampled d1 p1 /\ sampled d2 p2 /\
      (World !st interp) |= Possible (mean p1 $< const_term 1.0) /\
      (World !st interp) |= Possible (mean p1 $> const_term 1.0) /\
      (World !st interp) |= Possible (mean p2 $< const_term 2.0) /\
      (World !st interp) |= Possible (mean p2 $> const_term 2.0)
    } ensures {
      let p = result in
      Leq p = compose_pvs ((mean p1 $!= const_term 1.0) $|| (mean p2 $!= const_term 2.0)) !st &&
      (* stat_believe (Leq p) ((mean p1 $!= const_term 1.0) $|| (mean p2 $!= const_term 2.0)) !st && *)
      (World !st interp) |= StatB (Leq p) ((mean p1 $!= const_term 1.0) $|| (mean p2 $!= const_term 2.0))
    }
    = let r1 = exec_ttest_1samp p1 1.0 d1 Two in
      let r2 = exec_ttest_1samp p2 2.0 d2 Two in
      r1 +. r2

  let ex_two_hypotheses_conj d1 d2
    requires {
      is_empty !st /\
      sampled d1 p1 /\ sampled d2 p2 /\
      (World !st interp) |= Possible (mean p1 $< const_term 1.0) /\
      (World !st interp) |= Possible (mean p1 $> const_term 1.0) /\
      (World !st interp) |= Possible (mean p2 $< const_term 2.0) /\
      (World !st interp) |= Possible (mean p2 $> const_term 2.0)
    } ensures {
      let p = result in
      Leq p = compose_pvs ((mean p1 $!= const_term 1.0) $&& (mean p2 $!= const_term 2.0)) !st &&
      (* stat_believe (Leq p) ((mean p1 $!= const_term 1.0) $&& (mean p2 $!= const_term 2.0)) !st && *)
      (World !st interp) |= StatB (Leq p) ((mean p1 $!= const_term 1.0) $&& (mean p2 $!= const_term 2.0))
    }
    = let r1 = exec_ttest_1samp p1 1.0 d1 Two in
      let r2 = exec_ttest_1samp p2 2.0 d2 Two in
      min r1 r2




  let ex_three_hypotheses_disj d1 d2 d3
    requires {
      is_empty !st /\
      sampled d1 p1 /\ sampled d2 p2 /\ sampled d3 p3 /\
      (World !st interp) |= Possible (mean p1 $< const_term 1.0) /\
      (World !st interp) |= Possible (mean p1 $> const_term 1.0) /\
      (World !st interp) |= Possible (mean p2 $< const_term 2.0) /\
      (World !st interp) |= Possible (mean p2 $> const_term 2.0) /\
      (World !st interp) |= Possible (mean p3 $< const_term 3.0) /\
      (World !st interp) |= Possible (mean p3 $> const_term 3.0)
    } ensures {
      let p = result in
      (Leq p) = compose_pvs
                  ((mean p1 $!= const_term 1.0)
                   $|| (mean p2 $!= const_term 2.0)
                   $|| (mean p3 $!= const_term 3.0)) !st &&
      (World !st interp) |= StatB (Leq p) ((mean p1 $!= const_term 1.0)
                                           $|| (mean p2 $!= const_term 2.0)
                                           $|| (mean p3 $!= const_term 3.0))
    }
    = let r1 = exec_ttest_1samp p1 1.0 d1 Two in
      let r2 = exec_ttest_1samp p2 2.0 d2 Two in
      let r3 = exec_ttest_1samp p3 3.0 d3 Two in
      r1 +. r2 +. r3

  let ex_three_hypotheses_conj d1 d2 d3
    requires {
      is_empty !st /\
      sampled d1 p1 /\ sampled d2 p2 /\ sampled d3 p3 /\
      (World !st interp) |= Possible (mean p1 $< const_term 1.0) /\
      (World !st interp) |= Possible (mean p1 $> const_term 1.0) /\
      (World !st interp) |= Possible (mean p2 $< const_term 2.0) /\
      (World !st interp) |= Possible (mean p2 $> const_term 2.0) /\
      (World !st interp) |= Possible (mean p3 $< const_term 3.0) /\
      (World !st interp) |= Possible (mean p3 $> const_term 3.0)
    } ensures {
      let p = result in
      (Leq p) = compose_pvs ((mean p1 $!= const_term 1.0) $&& (mean p2 $!= const_term 2.0) $&& (mean p3 $!= const_term 3.0)) !st &&
      (World !st interp) |= StatB (Leq p) ((mean p1 $!= const_term 1.0) $&& (mean p2 $!= const_term 2.0) $&& (mean p3 $!= const_term 3.0))
    }
    = let r1 = exec_ttest_1samp p1 1.0 d1 Two in
      let r2 = exec_ttest_1samp p2 2.0 d2 Two in
      let r3 = exec_ttest_1samp p3 3.0 d3 Two in
      min (min r1 r2) r3



  let ex_four_hypotheses_disj d1 d2 d3 d4
    requires {
      is_empty !st /\
      sampled d1 p1 /\ sampled d2 p2 /\ sampled d3 p3 /\ sampled d4 p4 /\
      (World !st interp) |= Possible (mean p1 $< const_term 1.0) /\
      (World !st interp) |= Possible (mean p1 $> const_term 1.0) /\
      (World !st interp) |= Possible (mean p2 $< const_term 2.0) /\
      (World !st interp) |= Possible (mean p2 $> const_term 2.0) /\
      (World !st interp) |= Possible (mean p3 $< const_term 3.0) /\
      (World !st interp) |= Possible (mean p3 $> const_term 3.0) /\
      (World !st interp) |= Possible (mean p4 $< const_term 4.0) /\
      (World !st interp) |= Possible (mean p4 $> const_term 4.0)
    } ensures {
      let p = result in
      (Leq p) = compose_pvs
                  ((mean p1 $!= const_term 1.0)
                   $|| (mean p2 $!= const_term 2.0)
                   $|| (mean p3 $!= const_term 3.0)
                   $|| (mean p4 $!= const_term 4.0)) !st &&
      (World !st interp) |= StatB (Leq p) ((mean p1 $!= const_term 1.0)
                                           $|| (mean p2 $!= const_term 2.0)
                                           $|| (mean p3 $!= const_term 3.0)
                                           $|| (mean p4 $!= const_term 4.0))
    }
    = let r1 = exec_ttest_1samp p1 1.0 d1 Two in
      let r2 = exec_ttest_1samp p2 2.0 d2 Two in
      let r3 = exec_ttest_1samp p3 3.0 d3 Two in
      let r4 = exec_ttest_1samp p4 4.0 d4 Two in
      r1 +. r2 +. r3 +. r4

  let ex_four_hypotheses_conj d1 d2 d3 d4
    requires {
      is_empty !st /\
      sampled d1 p1 /\ sampled d2 p2 /\ sampled d3 p3 /\ sampled d4 p4 /\
      (World !st interp) |= Possible (mean p1 $< const_term 1.0) /\
      (World !st interp) |= Possible (mean p1 $> const_term 1.0) /\
      (World !st interp) |= Possible (mean p2 $< const_term 2.0) /\
      (World !st interp) |= Possible (mean p2 $> const_term 2.0) /\
      (World !st interp) |= Possible (mean p3 $< const_term 3.0) /\
      (World !st interp) |= Possible (mean p3 $> const_term 3.0) /\
      (World !st interp) |= Possible (mean p4 $< const_term 4.0) /\
      (World !st interp) |= Possible (mean p4 $> const_term 4.0)
    } ensures {
      let p = result in
      (Leq p) = compose_pvs
                  ((mean p1 $!= const_term 1.0)
                   $&& (mean p2 $!= const_term 2.0)
                   $&& (mean p3 $!= const_term 3.0)
                   $&& (mean p4 $!= const_term 4.0)) !st &&
      (World !st interp) |= StatB (Leq p) ((mean p1 $!= const_term 1.0)
                                           $&& (mean p2 $!= const_term 2.0)
                                           $&& (mean p3 $!= const_term 3.0)
                                           $&& (mean p4 $!= const_term 4.0))
    }
    = let r1 = exec_ttest_1samp p1 1.0 d1 Two in
      let r2 = exec_ttest_1samp p2 2.0 d2 Two in
      let r3 = exec_ttest_1samp p3 3.0 d3 Two in
      let r4 = exec_ttest_1samp p4 4.0 d4 Two in
      min (min (min r1 r2) r3) r4

  let ex_five_hypotheses_disj d1 d2 d3 d4 d5
    requires {
      is_empty !st /\
      sampled d1 p1 /\ sampled d2 p2 /\ sampled d3 p3 /\ sampled d4 p4 /\ sampled d5 p5 /\
      (World !st interp) |= Possible (mean p1 $< const_term 1.0) /\
      (World !st interp) |= Possible (mean p1 $> const_term 1.0) /\
      (World !st interp) |= Possible (mean p2 $< const_term 2.0) /\
      (World !st interp) |= Possible (mean p2 $> const_term 2.0) /\
      (World !st interp) |= Possible (mean p3 $< const_term 3.0) /\
      (World !st interp) |= Possible (mean p3 $> const_term 3.0) /\
      (World !st interp) |= Possible (mean p4 $< const_term 4.0) /\
      (World !st interp) |= Possible (mean p4 $> const_term 4.0) /\
      (World !st interp) |= Possible (mean p5 $< const_term 5.0) /\
      (World !st interp) |= Possible (mean p5 $> const_term 5.0)
    } ensures {
      let p = result in
      (Leq p) = compose_pvs
                  ((mean p1 $!= const_term 1.0)
                   $|| (mean p2 $!= const_term 2.0)
                   $|| (mean p3 $!= const_term 3.0)
                   $|| (mean p4 $!= const_term 4.0)
                   $|| (mean p5 $!= const_term 5.0)
                  ) !st &&
      (World !st interp) |= StatB (Leq p) ((mean p1 $!= const_term 1.0)
                                           $|| (mean p2 $!= const_term 2.0)
                                           $|| (mean p3 $!= const_term 3.0)
                                           $|| (mean p4 $!= const_term 4.0)
                                           $|| (mean p5 $!= const_term 5.0)
                                          )
    }
    = let r1 = exec_ttest_1samp p1 1.0 d1 Two in
      let r2 = exec_ttest_1samp p2 2.0 d2 Two in
      let r3 = exec_ttest_1samp p3 3.0 d3 Two in
      let r4 = exec_ttest_1samp p4 4.0 d4 Two in
      let r5 = exec_ttest_1samp p5 5.0 d5 Two in
      r1 +. r2 +. r3 +. r4 +. r5

  let ex_five_hypotheses_conj d1 d2 d3 d4 d5
    requires {
      is_empty !st /\
      sampled d1 p1 /\ sampled d2 p2 /\ sampled d3 p3 /\ sampled d4 p4 /\ sampled d5 p5 /\
      (World !st interp) |= Possible (mean p1 $< const_term 1.0) /\
      (World !st interp) |= Possible (mean p1 $> const_term 1.0) /\
      (World !st interp) |= Possible (mean p2 $< const_term 2.0) /\
      (World !st interp) |= Possible (mean p2 $> const_term 2.0) /\
      (World !st interp) |= Possible (mean p3 $< const_term 3.0) /\
      (World !st interp) |= Possible (mean p3 $> const_term 3.0) /\
      (World !st interp) |= Possible (mean p4 $< const_term 4.0) /\
      (World !st interp) |= Possible (mean p4 $> const_term 4.0) /\
      (World !st interp) |= Possible (mean p5 $< const_term 5.0) /\
      (World !st interp) |= Possible (mean p5 $> const_term 5.0)
    } ensures {
      let p = result in
      (Leq p) = compose_pvs
                  ((mean p1 $!= const_term 1.0)
                   $&& (mean p2 $!= const_term 2.0)
                   $&& (mean p3 $!= const_term 3.0)
                   $&& (mean p4 $!= const_term 4.0)
                   $&& (mean p5 $!= const_term 5.0)
                  ) !st &&
      (World !st interp) |= StatB (Leq p) ((mean p1 $!= const_term 1.0)
                                           $&& (mean p2 $!= const_term 2.0)
                                           $&& (mean p3 $!= const_term 3.0)
                                           $&& (mean p4 $!= const_term 4.0)
                                           $&& (mean p5 $!= const_term 5.0)
                                           )
    }
    = let r1 = exec_ttest_1samp p1 1.0 d1 Two in
      let r2 = exec_ttest_1samp p2 2.0 d2 Two in
      let r3 = exec_ttest_1samp p3 3.0 d3 Two in
      let r4 = exec_ttest_1samp p4 4.0 d4 Two in
      let r5 = exec_ttest_1samp p5 5.0 d5 Two in
      min (min (min (min r1 r2) r3) r4) r5

  let ex_six_hypotheses_disj d1 d2 d3 d4 d5 d6
    requires {
      is_empty !st /\
      sampled d1 p1 /\ sampled d2 p2 /\ sampled d3 p3 /\ sampled d4 p4 /\ sampled d5 p5 /\ sampled d6 p6 /\
      (World !st interp) |= Possible (mean p1 $< const_term 1.0) /\
      (World !st interp) |= Possible (mean p1 $> const_term 1.0) /\
      (World !st interp) |= Possible (mean p2 $< const_term 2.0) /\
      (World !st interp) |= Possible (mean p2 $> const_term 2.0) /\
      (World !st interp) |= Possible (mean p3 $< const_term 3.0) /\
      (World !st interp) |= Possible (mean p3 $> const_term 3.0) /\
      (World !st interp) |= Possible (mean p4 $< const_term 4.0) /\
      (World !st interp) |= Possible (mean p4 $> const_term 4.0) /\
      (World !st interp) |= Possible (mean p5 $< const_term 5.0) /\
      (World !st interp) |= Possible (mean p5 $> const_term 5.0) /\
      (World !st interp) |= Possible (mean p6 $< const_term 6.0) /\
      (World !st interp) |= Possible (mean p6 $> const_term 6.0)
    } ensures {
      let p = result in
      (Leq p) = compose_pvs
                  ((mean p1 $!= const_term 1.0)
                   $|| (mean p2 $!= const_term 2.0)
                   $|| (mean p3 $!= const_term 3.0)
                   $|| (mean p4 $!= const_term 4.0)
                   $|| (mean p5 $!= const_term 5.0)
                   $|| (mean p6 $!= const_term 6.0)
                  ) !st &&
      (World !st interp) |= StatB (Leq p) ((mean p1 $!= const_term 1.0)
                                           $|| (mean p2 $!= const_term 2.0)
                                           $|| (mean p3 $!= const_term 3.0)
                                           $|| (mean p4 $!= const_term 4.0)
                                           $|| (mean p5 $!= const_term 5.0)
                                           $|| (mean p6 $!= const_term 6.0)
                                          )
    }
    = let r1 = exec_ttest_1samp p1 1.0 d1 Two in
      let r2 = exec_ttest_1samp p2 2.0 d2 Two in
      let r3 = exec_ttest_1samp p3 3.0 d3 Two in
      let r4 = exec_ttest_1samp p4 4.0 d4 Two in
      let r5 = exec_ttest_1samp p5 5.0 d5 Two in
      let r6 = exec_ttest_1samp p6 6.0 d6 Two in
      r1 +. r2 +. r3 +. r4 +. r5 +. r6

  let ex_six_hypotheses_conj d1 d2 d3 d4 d5 d6
    requires {
      is_empty !st /\
      sampled d1 p1 /\ sampled d2 p2 /\ sampled d3 p3 /\ sampled d4 p4 /\ sampled d5 p5 /\ sampled d6 p6 /\
      (World !st interp) |= Possible (mean p1 $< const_term 1.0) /\
      (World !st interp) |= Possible (mean p1 $> const_term 1.0) /\
      (World !st interp) |= Possible (mean p2 $< const_term 2.0) /\
      (World !st interp) |= Possible (mean p2 $> const_term 2.0) /\
      (World !st interp) |= Possible (mean p3 $< const_term 3.0) /\
      (World !st interp) |= Possible (mean p3 $> const_term 3.0) /\
      (World !st interp) |= Possible (mean p4 $< const_term 4.0) /\
      (World !st interp) |= Possible (mean p4 $> const_term 4.0) /\
      (World !st interp) |= Possible (mean p5 $< const_term 5.0) /\
      (World !st interp) |= Possible (mean p5 $> const_term 5.0) /\
      (World !st interp) |= Possible (mean p6 $< const_term 6.0) /\
      (World !st interp) |= Possible (mean p6 $> const_term 6.0)
    } ensures {
      let p = result in
      (Leq p) = compose_pvs
                  ((mean p1 $!= const_term 1.0)
                   $&& (mean p2 $!= const_term 2.0)
                   $&& (mean p3 $!= const_term 3.0)
                   $&& (mean p4 $!= const_term 4.0)
                   $&& (mean p5 $!= const_term 5.0)
                   $&& (mean p6 $!= const_term 6.0)
                  ) !st &&
      (World !st interp) |= StatB (Leq p) ((mean p1 $!= const_term 1.0)
                                           $&& (mean p2 $!= const_term 2.0)
                                           $&& (mean p3 $!= const_term 3.0)
                                           $&& (mean p4 $!= const_term 4.0)
                                           $&& (mean p5 $!= const_term 5.0)
                                           $&& (mean p6 $!= const_term 6.0)
                                           )
    }
    = let r1 = exec_ttest_1samp p1 1.0 d1 Two in
      let r2 = exec_ttest_1samp p2 2.0 d2 Two in
      let r3 = exec_ttest_1samp p3 3.0 d3 Two in
      let r4 = exec_ttest_1samp p4 4.0 d4 Two in
      let r5 = exec_ttest_1samp p5 5.0 d5 Two in
      let r6 = exec_ttest_1samp p6 6.0 d6 Two in
      min (min (min (min (min r1 r2) r3) r4) r5) r6

  let ex_seven_hypotheses_disj d1 d2 d3 d4 d5 d6 d7
    requires {
      is_empty !st /\
      sampled d1 p1 /\ sampled d2 p2 /\ sampled d3 p3 /\ sampled d4 p4 /\ sampled d5 p5 /\ sampled d6 p6 /\ sampled d7 p7 /\
      (World !st interp) |= Possible (mean p1 $< const_term 1.0) /\
      (World !st interp) |= Possible (mean p1 $> const_term 1.0) /\
      (World !st interp) |= Possible (mean p2 $< const_term 2.0) /\
      (World !st interp) |= Possible (mean p2 $> const_term 2.0) /\
      (World !st interp) |= Possible (mean p3 $< const_term 3.0) /\
      (World !st interp) |= Possible (mean p3 $> const_term 3.0) /\
      (World !st interp) |= Possible (mean p4 $< const_term 4.0) /\
      (World !st interp) |= Possible (mean p4 $> const_term 4.0) /\
      (World !st interp) |= Possible (mean p5 $< const_term 5.0) /\
      (World !st interp) |= Possible (mean p5 $> const_term 5.0) /\
      (World !st interp) |= Possible (mean p6 $< const_term 6.0) /\
      (World !st interp) |= Possible (mean p6 $> const_term 6.0) /\
      (World !st interp) |= Possible (mean p7 $< const_term 7.0) /\
      (World !st interp) |= Possible (mean p7 $> const_term 7.0)
    } ensures {
      let p = result in
      (Leq p) = compose_pvs
                  ((mean p1 $!= const_term 1.0)
                   $|| (mean p2 $!= const_term 2.0)
                   $|| (mean p3 $!= const_term 3.0)
                   $|| (mean p4 $!= const_term 4.0)
                   $|| (mean p5 $!= const_term 5.0)
                   $|| (mean p6 $!= const_term 6.0)
                   $|| (mean p7 $!= const_term 7.0)
                  ) !st &&
      (World !st interp) |= StatB (Leq p) ((mean p1 $!= const_term 1.0)
                                           $|| (mean p2 $!= const_term 2.0)
                                           $|| (mean p3 $!= const_term 3.0)
                                           $|| (mean p4 $!= const_term 4.0)
                                           $|| (mean p5 $!= const_term 5.0)
                                           $|| (mean p6 $!= const_term 6.0)
                                           $|| (mean p7 $!= const_term 7.0)
                                          )
    }
    = let r1 = exec_ttest_1samp p1 1.0 d1 Two in
      let r2 = exec_ttest_1samp p2 2.0 d2 Two in
      let r3 = exec_ttest_1samp p3 3.0 d3 Two in
      let r4 = exec_ttest_1samp p4 4.0 d4 Two in
      let r5 = exec_ttest_1samp p5 5.0 d5 Two in
      let r6 = exec_ttest_1samp p6 6.0 d6 Two in
      let r7 = exec_ttest_1samp p7 7.0 d7 Two in
      r1 +. r2 +. r3 +. r4 +. r5 +. r6 +. r7

  let ex_seven_hypotheses_conj d1 d2 d3 d4 d5 d6 d7
    requires {
      is_empty !st /\
      sampled d1 p1 /\ sampled d2 p2 /\ sampled d3 p3 /\ sampled d4 p4 /\ sampled d5 p5 /\ sampled d6 p6 /\ sampled d7 p7 /\
      (World !st interp) |= Possible (mean p1 $< const_term 1.0) /\
      (World !st interp) |= Possible (mean p1 $> const_term 1.0) /\
      (World !st interp) |= Possible (mean p2 $< const_term 2.0) /\
      (World !st interp) |= Possible (mean p2 $> const_term 2.0) /\
      (World !st interp) |= Possible (mean p3 $< const_term 3.0) /\
      (World !st interp) |= Possible (mean p3 $> const_term 3.0) /\
      (World !st interp) |= Possible (mean p4 $< const_term 4.0) /\
      (World !st interp) |= Possible (mean p4 $> const_term 4.0) /\
      (World !st interp) |= Possible (mean p5 $< const_term 5.0) /\
      (World !st interp) |= Possible (mean p5 $> const_term 5.0) /\
      (World !st interp) |= Possible (mean p6 $< const_term 6.0) /\
      (World !st interp) |= Possible (mean p6 $> const_term 6.0) /\
      (World !st interp) |= Possible (mean p7 $< const_term 7.0) /\
      (World !st interp) |= Possible (mean p7 $> const_term 7.0)
    } ensures {
      let p = result in
      (Leq p) = compose_pvs
                  ((mean p1 $!= const_term 1.0)
                   $&& (mean p2 $!= const_term 2.0)
                   $&& (mean p3 $!= const_term 3.0)
                   $&& (mean p4 $!= const_term 4.0)
                   $&& (mean p5 $!= const_term 5.0)
                   $&& (mean p6 $!= const_term 6.0)
                   $&& (mean p7 $!= const_term 7.0)
                  ) !st &&
      (World !st interp) |= StatB (Leq p) ((mean p1 $!= const_term 1.0)
                                           $&& (mean p2 $!= const_term 2.0)
                                           $&& (mean p3 $!= const_term 3.0)
                                           $&& (mean p4 $!= const_term 4.0)
                                           $&& (mean p5 $!= const_term 5.0)
                                           $&& (mean p6 $!= const_term 6.0)
                                           $&& (mean p7 $!= const_term 7.0)
                                           )
    }
    = let r1 = exec_ttest_1samp p1 1.0 d1 Two in
      let r2 = exec_ttest_1samp p2 2.0 d2 Two in
      let r3 = exec_ttest_1samp p3 3.0 d3 Two in
      let r4 = exec_ttest_1samp p4 4.0 d4 Two in
      let r5 = exec_ttest_1samp p5 5.0 d5 Two in
      let r6 = exec_ttest_1samp p6 6.0 d6 Two in
      let r7 = exec_ttest_1samp p7 7.0 d7 Two in
      min (min (min (min (min (min r1 r2) r3) r4) r5) r6) r7

  let ex_eight_hypotheses_disj d1 d2 d3 d4 d5 d6 d7 d8
    requires {
      is_empty !st /\
      sampled d1 p1 /\ sampled d2 p2 /\ sampled d3 p3 /\ sampled d4 p4 /\ sampled d5 p5 /\ sampled d6 p6 /\ sampled d7 p7 /\ sampled d8 p8 /\
      (World !st interp) |= Possible (mean p1 $< const_term 1.0) /\
      (World !st interp) |= Possible (mean p1 $> const_term 1.0) /\
      (World !st interp) |= Possible (mean p2 $< const_term 2.0) /\
      (World !st interp) |= Possible (mean p2 $> const_term 2.0) /\
      (World !st interp) |= Possible (mean p3 $< const_term 3.0) /\
      (World !st interp) |= Possible (mean p3 $> const_term 3.0) /\
      (World !st interp) |= Possible (mean p4 $< const_term 4.0) /\
      (World !st interp) |= Possible (mean p4 $> const_term 4.0) /\
      (World !st interp) |= Possible (mean p5 $< const_term 5.0) /\
      (World !st interp) |= Possible (mean p5 $> const_term 5.0) /\
      (World !st interp) |= Possible (mean p6 $< const_term 6.0) /\
      (World !st interp) |= Possible (mean p6 $> const_term 6.0) /\
      (World !st interp) |= Possible (mean p7 $< const_term 7.0) /\
      (World !st interp) |= Possible (mean p7 $> const_term 7.0) /\
      (World !st interp) |= Possible (mean p8 $< const_term 8.0) /\
      (World !st interp) |= Possible (mean p8 $> const_term 8.0)
    } ensures {
      let p = result in
      (Leq p) = compose_pvs
                  ((mean p1 $!= const_term 1.0)
                   $|| (mean p2 $!= const_term 2.0)
                   $|| (mean p3 $!= const_term 3.0)
                   $|| (mean p4 $!= const_term 4.0)
                   $|| (mean p5 $!= const_term 5.0)
                   $|| (mean p6 $!= const_term 6.0)
                   $|| (mean p7 $!= const_term 7.0)
                   $|| (mean p8 $!= const_term 8.0)
                  ) !st &&
      (World !st interp) |= StatB (Leq p) ((mean p1 $!= const_term 1.0)
                                           $|| (mean p2 $!= const_term 2.0)
                                           $|| (mean p3 $!= const_term 3.0)
                                           $|| (mean p4 $!= const_term 4.0)
                                           $|| (mean p5 $!= const_term 5.0)
                                           $|| (mean p6 $!= const_term 6.0)
                                           $|| (mean p7 $!= const_term 7.0)
                                           $|| (mean p8 $!= const_term 8.0)
                                          )
    }
    = let r1 = exec_ttest_1samp p1 1.0 d1 Two in
      let r2 = exec_ttest_1samp p2 2.0 d2 Two in
      let r3 = exec_ttest_1samp p3 3.0 d3 Two in
      let r4 = exec_ttest_1samp p4 4.0 d4 Two in
      let r5 = exec_ttest_1samp p5 5.0 d5 Two in
      let r6 = exec_ttest_1samp p6 6.0 d6 Two in
      let r7 = exec_ttest_1samp p7 7.0 d7 Two in
      let r8 = exec_ttest_1samp p8 8.0 d8 Two in
      r1 +. r2 +. r3 +. r4 +. r5 +. r6 +. r7 +. r8

  let ex_eight_hypotheses_conj d1 d2 d3 d4 d5 d6 d7 d8
    requires {
      is_empty !st /\
      sampled d1 p1 /\ sampled d2 p2 /\ sampled d3 p3 /\ sampled d4 p4 /\ sampled d5 p5 /\ sampled d6 p6 /\ sampled d7 p7 /\ sampled d8 p8 /\
      (World !st interp) |= Possible (mean p1 $< const_term 1.0) /\
      (World !st interp) |= Possible (mean p1 $> const_term 1.0) /\
      (World !st interp) |= Possible (mean p2 $< const_term 2.0) /\
      (World !st interp) |= Possible (mean p2 $> const_term 2.0) /\
      (World !st interp) |= Possible (mean p3 $< const_term 3.0) /\
      (World !st interp) |= Possible (mean p3 $> const_term 3.0) /\
      (World !st interp) |= Possible (mean p4 $< const_term 4.0) /\
      (World !st interp) |= Possible (mean p4 $> const_term 4.0) /\
      (World !st interp) |= Possible (mean p5 $< const_term 5.0) /\
      (World !st interp) |= Possible (mean p5 $> const_term 5.0) /\
      (World !st interp) |= Possible (mean p6 $< const_term 6.0) /\
      (World !st interp) |= Possible (mean p6 $> const_term 6.0) /\
      (World !st interp) |= Possible (mean p7 $< const_term 7.0) /\
      (World !st interp) |= Possible (mean p7 $> const_term 7.0) /\
      (World !st interp) |= Possible (mean p8 $< const_term 8.0) /\
      (World !st interp) |= Possible (mean p8 $> const_term 8.0)
    } ensures {
      let p = result in
      (Leq p) = compose_pvs
                  ((mean p1 $!= const_term 1.0)
                   $&& (mean p2 $!= const_term 2.0)
                   $&& (mean p3 $!= const_term 3.0)
                   $&& (mean p4 $!= const_term 4.0)
                   $&& (mean p5 $!= const_term 5.0)
                   $&& (mean p6 $!= const_term 6.0)
                   $&& (mean p7 $!= const_term 7.0)
                   $&& (mean p8 $!= const_term 8.0)
                  ) !st &&
      (World !st interp) |= StatB (Leq p) ((mean p1 $!= const_term 1.0)
                                           $&& (mean p2 $!= const_term 2.0)
                                           $&& (mean p3 $!= const_term 3.0)
                                           $&& (mean p4 $!= const_term 4.0)
                                           $&& (mean p5 $!= const_term 5.0)
                                           $&& (mean p6 $!= const_term 6.0)
                                           $&& (mean p7 $!= const_term 7.0)
                                           $&& (mean p8 $!= const_term 8.0)
                                           )
    }
    = let r1 = exec_ttest_1samp p1 1.0 d1 Two in
      let r2 = exec_ttest_1samp p2 2.0 d2 Two in
      let r3 = exec_ttest_1samp p3 3.0 d3 Two in
      let r4 = exec_ttest_1samp p4 4.0 d4 Two in
      let r5 = exec_ttest_1samp p5 5.0 d5 Two in
      let r6 = exec_ttest_1samp p6 6.0 d6 Two in
      let r7 = exec_ttest_1samp p7 7.0 d7 Two in
      let r8 = exec_ttest_1samp p8 8.0 d8 Two in
      min (min (min (min (min (min (min r1 r2) r3) r4) r5) r6) r7) r8

  let ex_nine_hypotheses_disj d1 d2 d3 d4 d5 d6 d7 d8 d9
    requires {
      is_empty !st /\
      sampled d1 p1 /\ sampled d2 p2 /\ sampled d3 p3 /\ sampled d4 p4 /\ sampled d5 p5 /\ sampled d6 p6 /\ sampled d7 p7 /\ sampled d8 p8 /\ sampled d9 p9 /\
      (World !st interp) |= Possible (mean p1 $< const_term 1.0) /\
      (World !st interp) |= Possible (mean p1 $> const_term 1.0) /\
      (World !st interp) |= Possible (mean p2 $< const_term 2.0) /\
      (World !st interp) |= Possible (mean p2 $> const_term 2.0) /\
      (World !st interp) |= Possible (mean p3 $< const_term 3.0) /\
      (World !st interp) |= Possible (mean p3 $> const_term 3.0) /\
      (World !st interp) |= Possible (mean p4 $< const_term 4.0) /\
      (World !st interp) |= Possible (mean p4 $> const_term 4.0) /\
      (World !st interp) |= Possible (mean p5 $< const_term 5.0) /\
      (World !st interp) |= Possible (mean p5 $> const_term 5.0) /\
      (World !st interp) |= Possible (mean p6 $< const_term 6.0) /\
      (World !st interp) |= Possible (mean p6 $> const_term 6.0) /\
      (World !st interp) |= Possible (mean p7 $< const_term 7.0) /\
      (World !st interp) |= Possible (mean p7 $> const_term 7.0) /\
      (World !st interp) |= Possible (mean p8 $< const_term 8.0) /\
      (World !st interp) |= Possible (mean p8 $> const_term 8.0) /\
      (World !st interp) |= Possible (mean p9 $< const_term 9.0) /\
      (World !st interp) |= Possible (mean p9 $> const_term 9.0)
    } ensures {
      let p = result in
      (Leq p) = compose_pvs
                  ((mean p1 $!= const_term 1.0)
                   $|| (mean p2 $!= const_term 2.0)
                   $|| (mean p3 $!= const_term 3.0)
                   $|| (mean p4 $!= const_term 4.0)
                   $|| (mean p5 $!= const_term 5.0)
                   $|| (mean p6 $!= const_term 6.0)
                   $|| (mean p7 $!= const_term 7.0)
                   $|| (mean p8 $!= const_term 8.0)
                   $|| (mean p9 $!= const_term 9.0)
                  ) !st &&
      (World !st interp) |= StatB (Leq p) ((mean p1 $!= const_term 1.0)
                                           $|| (mean p2 $!= const_term 2.0)
                                           $|| (mean p3 $!= const_term 3.0)
                                           $|| (mean p4 $!= const_term 4.0)
                                           $|| (mean p5 $!= const_term 5.0)
                                           $|| (mean p6 $!= const_term 6.0)
                                           $|| (mean p7 $!= const_term 7.0)
                                           $|| (mean p8 $!= const_term 8.0)
                                           $|| (mean p9 $!= const_term 9.0)
                                          )
    }
    = let r1 = exec_ttest_1samp p1 1.0 d1 Two in
      let r2 = exec_ttest_1samp p2 2.0 d2 Two in
      let r3 = exec_ttest_1samp p3 3.0 d3 Two in
      let r4 = exec_ttest_1samp p4 4.0 d4 Two in
      let r5 = exec_ttest_1samp p5 5.0 d5 Two in
      let r6 = exec_ttest_1samp p6 6.0 d6 Two in
      let r7 = exec_ttest_1samp p7 7.0 d7 Two in
      let r8 = exec_ttest_1samp p8 8.0 d8 Two in
      let r9 = exec_ttest_1samp p9 9.0 d9 Two in
      r1 +. r2 +. r3 +. r4 +. r5 +. r6 +. r7 +. r8 +. r9

  let ex_nine_hypotheses_conj d1 d2 d3 d4 d5 d6 d7 d8 d9
    requires {
      is_empty !st /\
      sampled d1 p1 /\ sampled d2 p2 /\ sampled d3 p3 /\ sampled d4 p4 /\ sampled d5 p5 /\ sampled d6 p6 /\ sampled d7 p7 /\ sampled d8 p8 /\ sampled d9 p9 /\ 
      (World !st interp) |= Possible (mean p1 $< const_term 1.0) /\
      (World !st interp) |= Possible (mean p1 $> const_term 1.0) /\
      (World !st interp) |= Possible (mean p2 $< const_term 2.0) /\
      (World !st interp) |= Possible (mean p2 $> const_term 2.0) /\
      (World !st interp) |= Possible (mean p3 $< const_term 3.0) /\
      (World !st interp) |= Possible (mean p3 $> const_term 3.0) /\
      (World !st interp) |= Possible (mean p4 $< const_term 4.0) /\
      (World !st interp) |= Possible (mean p4 $> const_term 4.0) /\
      (World !st interp) |= Possible (mean p5 $< const_term 5.0) /\
      (World !st interp) |= Possible (mean p5 $> const_term 5.0) /\
      (World !st interp) |= Possible (mean p6 $< const_term 6.0) /\
      (World !st interp) |= Possible (mean p6 $> const_term 6.0) /\
      (World !st interp) |= Possible (mean p7 $< const_term 7.0) /\
      (World !st interp) |= Possible (mean p7 $> const_term 7.0) /\
      (World !st interp) |= Possible (mean p8 $< const_term 8.0) /\
      (World !st interp) |= Possible (mean p8 $> const_term 8.0) /\
      (World !st interp) |= Possible (mean p9 $< const_term 9.0) /\
      (World !st interp) |= Possible (mean p9 $> const_term 9.0)
    } ensures {
      let p = result in
      (Leq p) = compose_pvs
                  ((mean p1 $!= const_term 1.0)
                   $&& (mean p2 $!= const_term 2.0)
                   $&& (mean p3 $!= const_term 3.0)
                   $&& (mean p4 $!= const_term 4.0)
                   $&& (mean p5 $!= const_term 5.0)
                   $&& (mean p6 $!= const_term 6.0)
                   $&& (mean p7 $!= const_term 7.0)
                   $&& (mean p8 $!= const_term 8.0)
                   $&& (mean p9 $!= const_term 9.0)
                  ) !st &&
      (World !st interp) |= StatB (Leq p) ((mean p1 $!= const_term 1.0)
                                           $&& (mean p2 $!= const_term 2.0)
                                           $&& (mean p3 $!= const_term 3.0)
                                           $&& (mean p4 $!= const_term 4.0)
                                           $&& (mean p5 $!= const_term 5.0)
                                           $&& (mean p6 $!= const_term 6.0)
                                           $&& (mean p7 $!= const_term 7.0)
                                           $&& (mean p8 $!= const_term 8.0)
                                           $&& (mean p9 $!= const_term 9.0)
                                           )
    }
    = let r1 = exec_ttest_1samp p1 1.0 d1 Two in
      let r2 = exec_ttest_1samp p2 2.0 d2 Two in
      let r3 = exec_ttest_1samp p3 3.0 d3 Two in
      let r4 = exec_ttest_1samp p4 4.0 d4 Two in
      let r5 = exec_ttest_1samp p5 5.0 d5 Two in
      let r6 = exec_ttest_1samp p6 6.0 d6 Two in
      let r7 = exec_ttest_1samp p7 7.0 d7 Two in
      let r8 = exec_ttest_1samp p8 8.0 d8 Two in
      let r9 = exec_ttest_1samp p9 9.0 d9 Two in
      min (min (min (min (min (min (min (min r1 r2) r3) r4) r5) r6) r7) r8) r9

  let ex_ten_hypotheses_disj d1 d2 d3 d4 d5 d6 d7 d8 d9 d10
    requires {
      is_empty !st /\
      sampled d1 p1 /\ sampled d2 p2 /\ sampled d3 p3 /\ sampled d4 p4 /\ sampled d5 p5 /\ sampled d6 p6 /\ sampled d7 p7 /\ sampled d8 p8 /\ sampled d9 p9 /\ sampled d10 p10 /\
      (World !st interp) |= Possible (mean p1 $< const_term 1.0) /\
      (World !st interp) |= Possible (mean p1 $> const_term 1.0) /\
      (World !st interp) |= Possible (mean p2 $< const_term 2.0) /\
      (World !st interp) |= Possible (mean p2 $> const_term 2.0) /\
      (World !st interp) |= Possible (mean p3 $< const_term 3.0) /\
      (World !st interp) |= Possible (mean p3 $> const_term 3.0) /\
      (World !st interp) |= Possible (mean p4 $< const_term 4.0) /\
      (World !st interp) |= Possible (mean p4 $> const_term 4.0) /\
      (World !st interp) |= Possible (mean p5 $< const_term 5.0) /\
      (World !st interp) |= Possible (mean p5 $> const_term 5.0) /\
      (World !st interp) |= Possible (mean p6 $< const_term 6.0) /\
      (World !st interp) |= Possible (mean p6 $> const_term 6.0) /\
      (World !st interp) |= Possible (mean p7 $< const_term 7.0) /\
      (World !st interp) |= Possible (mean p7 $> const_term 7.0) /\
      (World !st interp) |= Possible (mean p8 $< const_term 8.0) /\
      (World !st interp) |= Possible (mean p8 $> const_term 8.0) /\
      (World !st interp) |= Possible (mean p9 $< const_term 9.0) /\
      (World !st interp) |= Possible (mean p9 $> const_term 9.0) /\
      (World !st interp) |= Possible (mean p10 $< const_term 10.0) /\
      (World !st interp) |= Possible (mean p10 $> const_term 10.0)
    } ensures {
      let p = result in
      (Leq p) = compose_pvs
                  ((mean p1 $!= const_term 1.0)
                   $|| (mean p2 $!= const_term 2.0)
                   $|| (mean p3 $!= const_term 3.0)
                   $|| (mean p4 $!= const_term 4.0)
                   $|| (mean p5 $!= const_term 5.0)
                   $|| (mean p6 $!= const_term 6.0)
                   $|| (mean p7 $!= const_term 7.0)
                   $|| (mean p8 $!= const_term 8.0)
                   $|| (mean p9 $!= const_term 9.0)
                   $|| (mean p10 $!= const_term 10.0)
                  ) !st &&
      (World !st interp) |= StatB (Leq p) ((mean p1 $!= const_term 1.0)
                                           $|| (mean p2 $!= const_term 2.0)
                                           $|| (mean p3 $!= const_term 3.0)
                                           $|| (mean p4 $!= const_term 4.0)
                                           $|| (mean p5 $!= const_term 5.0)
                                           $|| (mean p6 $!= const_term 6.0)
                                           $|| (mean p7 $!= const_term 7.0)
                                           $|| (mean p8 $!= const_term 8.0)
                                           $|| (mean p9 $!= const_term 9.0)
                                           $|| (mean p10 $!= const_term 10.0)
                                          )
    }
    = let r1 = exec_ttest_1samp p1 1.0 d1 Two in
      let r2 = exec_ttest_1samp p2 2.0 d2 Two in
      let r3 = exec_ttest_1samp p3 3.0 d3 Two in
      let r4 = exec_ttest_1samp p4 4.0 d4 Two in
      let r5 = exec_ttest_1samp p5 5.0 d5 Two in
      let r6 = exec_ttest_1samp p6 6.0 d6 Two in
      let r7 = exec_ttest_1samp p7 7.0 d7 Two in
      let r8 = exec_ttest_1samp p8 8.0 d8 Two in
      let r9 = exec_ttest_1samp p9 9.0 d9 Two in
      let r10 = exec_ttest_1samp p10 10.0 d10 Two in
      r1 +. r2 +. r3 +. r4 +. r5 +. r6 +. r7 +. r8 +. r9 +. r10

  let ex_ten_hypotheses_conj d1 d2 d3 d4 d5 d6 d7 d8 d9 d10
    requires {
      is_empty !st /\
      sampled d1 p1 /\ sampled d2 p2 /\ sampled d3 p3 /\ sampled d4 p4 /\ sampled d5 p5 /\ sampled d6 p6 /\ sampled d7 p7 /\ sampled d8 p8 /\ sampled d9 p9 /\ sampled d10 p10 /\
      (World !st interp) |= Possible (mean p1 $< const_term 1.0) /\
      (World !st interp) |= Possible (mean p1 $> const_term 1.0) /\
      (World !st interp) |= Possible (mean p2 $< const_term 2.0) /\
      (World !st interp) |= Possible (mean p2 $> const_term 2.0) /\
      (World !st interp) |= Possible (mean p3 $< const_term 3.0) /\
      (World !st interp) |= Possible (mean p3 $> const_term 3.0) /\
      (World !st interp) |= Possible (mean p4 $< const_term 4.0) /\
      (World !st interp) |= Possible (mean p4 $> const_term 4.0) /\
      (World !st interp) |= Possible (mean p5 $< const_term 5.0) /\
      (World !st interp) |= Possible (mean p5 $> const_term 5.0) /\
      (World !st interp) |= Possible (mean p6 $< const_term 6.0) /\
      (World !st interp) |= Possible (mean p6 $> const_term 6.0) /\
      (World !st interp) |= Possible (mean p7 $< const_term 7.0) /\
      (World !st interp) |= Possible (mean p7 $> const_term 7.0) /\
      (World !st interp) |= Possible (mean p8 $< const_term 8.0) /\
      (World !st interp) |= Possible (mean p8 $> const_term 8.0) /\
      (World !st interp) |= Possible (mean p9 $< const_term 9.0) /\
      (World !st interp) |= Possible (mean p9 $> const_term 9.0) /\
      (World !st interp) |= Possible (mean p10 $< const_term 10.0) /\
      (World !st interp) |= Possible (mean p10 $> const_term 10.0)
    } ensures {
      let p = result in
      (Leq p) = compose_pvs
                  ((mean p1 $!= const_term 1.0)
                   $&& (mean p2 $!= const_term 2.0)
                   $&& (mean p3 $!= const_term 3.0)
                   $&& (mean p4 $!= const_term 4.0)
                   $&& (mean p5 $!= const_term 5.0)
                   $&& (mean p6 $!= const_term 6.0)
                   $&& (mean p7 $!= const_term 7.0)
                   $&& (mean p8 $!= const_term 8.0)
                   $&& (mean p9 $!= const_term 9.0)
                   $&& (mean p10 $!= const_term 10.0)
                  ) !st &&
      (World !st interp) |= StatB (Leq p) ((mean p1 $!= const_term 1.0)
                                           $&& (mean p2 $!= const_term 2.0)
                                           $&& (mean p3 $!= const_term 3.0)
                                           $&& (mean p4 $!= const_term 4.0)
                                           $&& (mean p5 $!= const_term 5.0)
                                           $&& (mean p6 $!= const_term 6.0)
                                           $&& (mean p7 $!= const_term 7.0)
                                           $&& (mean p8 $!= const_term 8.0)
                                           $&& (mean p9 $!= const_term 9.0)
                                           $&& (mean p10 $!= const_term 10.0)
                                           )
    }
    = let r1 = exec_ttest_1samp p1 1.0 d1 Two in
      let r2 = exec_ttest_1samp p2 2.0 d2 Two in
      let r3 = exec_ttest_1samp p3 3.0 d3 Two in
      let r4 = exec_ttest_1samp p4 4.0 d4 Two in
      let r5 = exec_ttest_1samp p5 5.0 d5 Two in
      let r6 = exec_ttest_1samp p6 6.0 d6 Two in
      let r7 = exec_ttest_1samp p7 7.0 d7 Two in
      let r8 = exec_ttest_1samp p8 8.0 d8 Two in
      let r9 = exec_ttest_1samp p9 9.0 d9 Two in
      let r10 = exec_ttest_1samp p10 10.0 d10 Two in
      min (min (min (min (min (min (min (min (min r1 r2) r3) r4) r5) r6) r7) r8) r9) r10
end
