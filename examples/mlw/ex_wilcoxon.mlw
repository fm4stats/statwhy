module Wilcoxon
  use cameleerBHL.CameleerBHL
  use wilcoxon.Wilcoxon

  let function p1 = UnknownD "p1"
  let function p2 = UnknownD "p2"
  
  let ex_wilcoxon (d1 : list real) (d2 : list real) : real
  requires {
    is_empty !st /\
    sampled d1 p1 /\ sampled d2 p2 /\
    paired d1 d2 /\
    (World !st interp) |= Possible (mean p1 $< mean p2) /\
    (World !st interp) |= Possible (mean p1 $> mean p2)
  }
  ensures {
    let p = result in
    Eq p = compose_pvs (mean p1 $!= mean p2) !st &&
    (World !st interp) |= StatB (Eq p) (mean p1 $!= mean p2)
  }
  = exec_wilcoxon p1 p2 (d1, d2) Two
end
