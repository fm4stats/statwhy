module Oneway_example
  use cameleerBHL.CameleerBHL
  use oneway.Oneway
  
  let function p1 = NormalD (Param "m1") (Param "v")
  let function p2 = NormalD (Param "m2") (Param "v")
  let function p3 = NormalD (Param "m3") (Param "v")

  let function t_m1 = mean p1
  let function t_m2 = mean p2
  let function t_m3 = mean p3
  
  let ex_oneway (d1 d2 d3 : (list real))
  (* Executes oneway ANOVA for 3 population means *)
    requires { is_empty !st /\
               for_all2
                 (fun p y -> sampled y p)
                 (Cons p1 (Cons p2 (Cons p3 Nil)))
                 (Cons d1 (Cons d2 (Cons d3 Nil))) /\
               ((World !st interp) |= Possible (t_m1 <' t_m2)) /\
               ((World !st interp) |= Possible (t_m1 >' t_m2)) /\
               ((World !st interp) |= Possible (t_m1 <' t_m3)) /\
               ((World !st interp) |= Possible (t_m1 >' t_m3)) /\
               ((World !st interp) |= Possible (t_m2 <' t_m3)) /\
               ((World !st interp) |= Possible (t_m2 >' t_m3))
             }
    ensures {
      let p = result in
      let h = (t_m1 =!' t_m2) /\* (t_m1 =!' t_m3) /\* (t_m2 =!' t_m3) in
      Eq p = compose_pvs h !st &&
      (World !st interp) |= StatB (Eq p) h
    }
    = exec_oneway (Cons p1 (Cons p2 (Cons p3 Nil))) (Cons d1 (Cons d2 (Cons d3 Nil)))
end
