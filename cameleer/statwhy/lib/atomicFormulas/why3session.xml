<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"https://www.why3.org/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="Z3" version="4.12.2" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="1" name="Alt-Ergo" version="2.5.4" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="2" name="CVC5" version="1.0.6" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="4" name="Z3" version="4.14.1" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="5" name="Coq" version="8.19.0" timelimit="0" steplimit="0" memlimit="0"/>
<file format="whyml">
<path name=".."/><path name="atomicFormulas.mlw"/>
<theory name="Real" proved="true">
 <goal name="Real_equal_refl" proved="true">
 <proof prover="0" obsolete="true"><result status="valid" time="0.033609" steps="187331"/></proof>
 <proof prover="4"><result status="valid" time="0.022843" steps="191914"/></proof>
 </goal>
 <goal name="Real_equal_symm" proved="true">
 <proof prover="2"><result status="valid" time="0.062553" steps="41266"/></proof>
 </goal>
 <goal name="Real_equal_trans" proved="true">
 <proof prover="2" obsolete="true"><result status="valid" time="0.102030" steps="50831"/></proof>
 <proof prover="4"><result status="valid" time="0.026806" steps="214478"/></proof>
 </goal>
 <goal name="Real_interp_leq" proved="true">
 <proof prover="2" obsolete="true"><result status="valid" time="0.032847" steps="36347"/></proof>
 <proof prover="4"><result status="valid" time="0.050504" steps="326794"/></proof>
 </goal>
 <goal name="neq_tautology" proved="true">
 <proof prover="2"><result status="valid" time="0.078344" steps="43715"/></proof>
 </goal>
 <goal name="not_neq_implies_eq" proved="true">
 <proof prover="2"><result status="valid" time="0.079689" steps="43754"/></proof>
 </goal>
 <goal name="leq_or_eq_or_geq" proved="true">
 <proof prover="2" obsolete="true"><result status="valid" time="0.079908" steps="50815"/></proof>
 <proof prover="4"><result status="valid" time="0.036309" steps="267789"/></proof>
 </goal>
 <goal name="not_eq_implies_leq_or_geq" proved="true">
 <proof prover="2" obsolete="true"><result status="valid" time="0.036524" steps="40744"/></proof>
 <proof prover="4"><result status="valid" time="0.006698" steps="15554"/></proof>
 </goal>
 <goal name="neq_implies_leq_or_geq" proved="true">
 <proof prover="2" obsolete="true"><result status="valid" time="0.079445" steps="51218"/></proof>
 <proof prover="4"><result status="valid" time="0.031947" steps="269200"/></proof>
 </goal>
 <goal name="eq_real_number_soundness" proved="true">
 <proof prover="2"><result status="valid" time="0.073901" steps="44704"/></proof>
 </goal>
</theory>
<theory name="Ppl">
 <goal name="Ppl_check_variance_normald_const" proved="true">
 <proof prover="2"><result status="valid" time="0.105953" steps="49379"/></proof>
 </goal>
 <goal name="Ppl_check_variance_normald_param" proved="true">
 <proof prover="2"><result status="timeout" time="1.000000" steps="127611"/></proof>
 <proof prover="4"><result status="timeout" time="1.000000" steps="2722082"/></proof>
 <proof prover="5"><path name="atomicFormulas_Ppl_Ppl_check_variance_normald_param_2.v"/><result status="valid" time="0.360365"/></proof>
 <transf name="split_vc" >
  <goal name="Ppl_check_variance_normald_param.0">
  <proof prover="2" timelimit="30" memlimit="4000"><result status="timeout" time="30.000000" steps="420365"/></proof>
  <proof prover="4" timelimit="30" memlimit="4000"><result status="timeout" time="30.000000" steps="13925107"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="Eq_variance_ref" proved="true">
 <proof prover="0" obsolete="true"><result status="valid" time="0.041830" steps="243013"/></proof>
 <proof prover="2" timelimit="120" memlimit="10000"><result status="valid" time="0.086425" steps="46435"/></proof>
 </goal>
 <goal name="Eq_variance_sym" proved="true">
 <proof prover="2"><result status="valid" time="0.192165" steps="59089"/></proof>
 </goal>
 <goal name="Eq_variance_assoc" proved="true">
 <proof prover="0" obsolete="true"><result status="valid" time="0.157289" steps="931613"/></proof>
 <proof prover="2" timelimit="120" memlimit="10000"><result status="valid" time="0.214879" steps="70575"/></proof>
 </goal>
 <goal name="Eq_variance_same_var" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.000000" steps="2417978"/></proof>
 <proof prover="1" obsolete="true"><result status="timeout" time="1.000000" steps="12422"/></proof>
 <proof prover="2"><result status="timeout" time="1.000000" steps="93178"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="Eq_variance_same_var.0" proved="true">
  <proof prover="2"><result status="valid" time="0.039098" steps="42166"/></proof>
  </goal>
  <goal name="Eq_variance_same_var.1" proved="true">
  <proof prover="2"><result status="valid" time="0.038803" steps="42183"/></proof>
  </goal>
  <goal name="Eq_variance_same_var.2" proved="true">
  <proof prover="2"><result status="valid" time="0.095246" steps="46160"/></proof>
  </goal>
  <goal name="Eq_variance_same_var.3" proved="true">
  <proof prover="2"><result status="valid" time="0.070749" steps="47278"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="Eq_mean.Refl" proved="true">
 <proof prover="2"><result status="valid" time="0.095505" steps="43702"/></proof>
 </goal>
 <goal name="Eq_mean.Trans" proved="true">
 <proof prover="2"><result status="valid" time="0.160762" steps="52760"/></proof>
 </goal>
 <goal name="Eq_mean.Symm" proved="true">
 <proof prover="2"><result status="valid" time="0.086701" steps="45150"/></proof>
 </goal>
 <goal name="Eq_variance_same_mean" proved="true">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.000000" steps="1929910"/></proof>
 <proof prover="1" obsolete="true"><result status="timeout" time="1.000000" steps="9948"/></proof>
 <proof prover="2"><result status="timeout" time="1.000000" steps="174301"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="Eq_variance_same_mean.0" proved="true">
  <proof prover="2"><result status="valid" time="0.038538" steps="42360"/></proof>
  </goal>
  <goal name="Eq_variance_same_mean.1" proved="true">
  <proof prover="2"><result status="valid" time="0.090447" steps="42377"/></proof>
  </goal>
  <goal name="Eq_variance_same_mean.2" proved="true">
  <proof prover="2"><result status="valid" time="0.038542" steps="46354"/></proof>
  </goal>
  <goal name="Eq_variance_same_mean.3" proved="true">
  <proof prover="2"><result status="valid" time="0.066498" steps="44878"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="is_prob_dist_const_implies_is_prob_dist_const">
 <proof prover="0" obsolete="true"><result status="timeout" time="1.000000" steps="679305"/></proof>
 <proof prover="1" obsolete="true"><result status="timeout" time="1.000000" steps="14784"/></proof>
 <proof prover="2"><result status="timeout" time="1.000000" steps="162098"/></proof>
 <transf name="split_vc" >
  <goal name="is_prob_dist_const_implies_is_prob_dist_const.0">
  <proof prover="0" timelimit="5" memlimit="2000" obsolete="true"><result status="timeout" time="5.000000" steps="4838259"/></proof>
  <proof prover="1" obsolete="true"><result status="timeout" time="1.000000" steps="15735"/></proof>
  <proof prover="2" timelimit="30" memlimit="4000"><result status="timeout" time="30.000000" steps="2056529"/></proof>
  <proof prover="4" timelimit="30" memlimit="4000"><result status="timeout" time="30.000000" steps="32773039"/></proof>
  </goal>
  <goal name="is_prob_dist_const_implies_is_prob_dist_const.1">
  <proof prover="0" timelimit="5" memlimit="2000" obsolete="true"><result status="timeout" time="4.354440" steps="4941872"/></proof>
  <proof prover="1" timelimit="5" memlimit="2000" obsolete="true"><result status="timeout" time="5.000000" steps="48424"/></proof>
  <proof prover="2" timelimit="5" memlimit="2000"><result status="timeout" time="5.000000" steps="210686"/></proof>
  <proof prover="4" timelimit="5" memlimit="2000"><result status="timeout" time="5.000000" steps="5416110"/></proof>
  <transf name="inline_goal" >
   <goal name="is_prob_dist_const_implies_is_prob_dist_const.1.0">
   <transf name="split_all_full" >
    <goal name="is_prob_dist_const_implies_is_prob_dist_const.1.0.0">
    <proof prover="2"><result status="timeout" time="1.000000" steps="122983"/></proof>
    <proof prover="4"><result status="timeout" time="1.000000" steps="2447549"/></proof>
    <transf name="split_vc" >
     <goal name="is_prob_dist_const_implies_is_prob_dist_const.1.0.0.0">
     <proof prover="2" timelimit="5" memlimit="2000"><result status="timeout" time="5.000000" steps="719469"/></proof>
     <proof prover="4" timelimit="5" memlimit="2000"><result status="timeout" time="5.000000" steps="5098505"/></proof>
     <transf name="inline_goal" >
      <goal name="is_prob_dist_const_implies_is_prob_dist_const.1.0.0.0.0">
      <proof prover="2" timelimit="30" memlimit="4000"><result status="timeout" time="30.000000" steps="3434747"/></proof>
      <proof prover="4" timelimit="30" memlimit="4000"><result status="timeout" time="30.000000" steps="7742093"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="is_prob_dist_const_implies_is_prob_dist_const.1.0.1">
    <proof prover="2"><result status="timeout" time="1.000000" steps="123021"/></proof>
    <proof prover="4"><result status="timeout" time="1.000000" steps="2436340"/></proof>
    <transf name="split_vc" >
     <goal name="is_prob_dist_const_implies_is_prob_dist_const.1.0.1.0">
     <proof prover="2" timelimit="5" memlimit="2000"><result status="timeout" time="5.000000" steps="818481"/></proof>
     <proof prover="4" timelimit="5" memlimit="2000"><result status="timeout" time="5.000000" steps="5095574"/></proof>
     <transf name="inline_goal" >
      <goal name="is_prob_dist_const_implies_is_prob_dist_const.1.0.1.0.0">
      <proof prover="2" timelimit="30" memlimit="4000"><result status="timeout" time="30.000000" steps="3386716"/></proof>
      <proof prover="4" timelimit="30" memlimit="4000"><result status="timeout" time="30.000000" steps="7740481"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="is_prob_dist_const_implies_is_prob_dist_const.2">
  <proof prover="0" timelimit="5" memlimit="2000" obsolete="true"><result status="timeout" time="4.341446" steps="4923286"/></proof>
  <proof prover="1" timelimit="5" memlimit="2000" obsolete="true"><result status="timeout" time="5.000000" steps="101275"/></proof>
  <proof prover="2" timelimit="5" memlimit="2000"><result status="timeout" time="5.000000" steps="512708"/></proof>
  <proof prover="4" timelimit="5" memlimit="2000"><result status="timeout" time="5.000000" steps="5484759"/></proof>
  <transf name="inline_goal" >
   <goal name="is_prob_dist_const_implies_is_prob_dist_const.2.0">
   <transf name="split_all_full" >
    <goal name="is_prob_dist_const_implies_is_prob_dist_const.2.0.0">
    <proof prover="2"><result status="timeout" time="1.000000" steps="207224"/></proof>
    <proof prover="4"><result status="timeout" time="1.000000" steps="2293541"/></proof>
    <transf name="split_vc" >
     <goal name="is_prob_dist_const_implies_is_prob_dist_const.2.0.0.0">
     <proof prover="2" timelimit="5" memlimit="2000"><result status="timeout" time="5.000000" steps="778266"/></proof>
     <proof prover="4" timelimit="5" memlimit="2000"><result status="timeout" time="5.000000" steps="5223106"/></proof>
     <transf name="inline_goal" >
      <goal name="is_prob_dist_const_implies_is_prob_dist_const.2.0.0.0.0">
      <proof prover="2" timelimit="30" memlimit="4000"><result status="timeout" time="30.000000" steps="3610746"/></proof>
      <proof prover="4" timelimit="30" memlimit="4000"><result status="timeout" time="30.000000" steps="7726163"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="is_prob_dist_const_implies_is_prob_dist_const.2.0.1">
    <proof prover="2"><result status="timeout" time="1.000000" steps="201556"/></proof>
    <proof prover="4"><result status="timeout" time="0.738706" steps="1934758"/></proof>
    <transf name="split_vc" >
     <goal name="is_prob_dist_const_implies_is_prob_dist_const.2.0.1.0">
     <proof prover="2" timelimit="5" memlimit="2000"><result status="timeout" time="5.000000" steps="912073"/></proof>
     <proof prover="4" timelimit="5" memlimit="2000"><result status="timeout" time="5.000000" steps="5198969"/></proof>
     <transf name="inline_goal" >
      <goal name="is_prob_dist_const_implies_is_prob_dist_const.2.0.1.0.0">
      <proof prover="2" timelimit="30" memlimit="4000"><result status="timeout" time="30.000000" steps="3675821"/></proof>
      <proof prover="4" timelimit="30" memlimit="4000"><result status="timeout" time="30.000000" steps="7741128"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="test_prob_dist" proved="true">
 <proof prover="2"><result status="valid" time="0.246979" steps="78895"/></proof>
 </goal>
 <goal name="eq_real_number_list&#39;_refl" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="eq_real_number_list&#39;_refl.0" proved="true">
  <proof prover="2"><result status="valid" time="0.103812" steps="57409"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="eq_real_number_list&#39;_symm" proved="true">
 <proof prover="5"><path name="atomicFormulas_Ppl_eq_real_number_listqt_symm_1.v"/><result status="valid" time="0.499795"/></proof>
 </goal>
 <goal name="eq_real_number_list&#39;_trans" proved="true">
 <transf name="intros" proved="true" arg1="p1">
  <goal name="eq_real_number_list&#39;_trans.0" proved="true">
  <transf name="induction_arg_ty_lex" proved="true" arg1="p1">
   <goal name="eq_real_number_list&#39;_trans.0.0" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="eq_real_number_list&#39;_trans.0.0.0" proved="true">
    <proof prover="2"><result status="valid" time="0.100274" steps="57791"/></proof>
    </goal>
    <goal name="eq_real_number_list&#39;_trans.0.0.1" proved="true">
    <transf name="destruct_term_subst" proved="true" arg1="p2">
     <goal name="eq_real_number_list&#39;_trans.0.0.1.0" proved="true">
     <transf name="destruct_term_subst" proved="true" arg1="p3">
      <goal name="eq_real_number_list&#39;_trans.0.0.1.0.0" proved="true">
      <proof prover="2"><result status="valid" time="0.093514" steps="56139"/></proof>
      </goal>
      <goal name="eq_real_number_list&#39;_trans.0.0.1.0.1" proved="true">
      <proof prover="2"><result status="valid" time="0.085429" steps="55521"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="eq_real_number_list&#39;_trans.0.0.1.1" proved="true">
     <proof prover="2"><result status="valid" time="0.087358" steps="55386"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="eq_real_number_list&#39;_soundness" proved="true">
 <transf name="intros" proved="true" arg1="p1">
  <goal name="eq_real_number_list&#39;_soundness.0" proved="true">
  <transf name="induction_arg_ty_lex" proved="true" arg1="p1">
   <goal name="eq_real_number_list&#39;_soundness.0.0" proved="true">
   <proof prover="2"><result status="valid" time="0.223021" steps="82339"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="eq_p_refl" proved="true">
 <proof prover="2"><result status="timeout" time="1.000000" steps="165986"/></proof>
 <proof prover="4"><result status="timeout" time="1.000000" steps="3785153"/></proof>
 <transf name="intros" proved="true" arg1="p">
  <goal name="eq_p_refl.0" proved="true">
  <transf name="destruct_term_subst" proved="true" arg1="p">
   <goal name="eq_p_refl.0.0" proved="true">
   <proof prover="4"><result status="valid" time="0.032831" steps="270966"/></proof>
   </goal>
   <goal name="eq_p_refl.0.1" proved="true">
   <proof prover="4"><result status="valid" time="0.033281" steps="271020"/></proof>
   </goal>
   <goal name="eq_p_refl.0.2" proved="true">
   <proof prover="4"><result status="valid" time="0.035116" steps="277898"/></proof>
   </goal>
   <goal name="eq_p_refl.0.3" proved="true">
   <proof prover="2"><result status="valid" time="0.085770" steps="50416"/></proof>
   <proof prover="4"><result status="valid" time="0.036761" steps="281126"/></proof>
   <transf name="split_vc" proved="true" >
    <goal name="eq_p_refl.0.3.0" proved="true">
    <proof prover="4"><result status="valid" time="0.035236" steps="281101"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 <transf name="split_vc" >
  <goal name="eq_p_refl.0">
  <proof prover="2" timelimit="5" memlimit="2000"><result status="timeout" time="5.000000" steps="305587"/></proof>
  <proof prover="4" timelimit="5" memlimit="2000"><result status="timeout" time="5.000000" steps="10763890"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="eq_population_soundness" proved="true">
 <proof prover="2"><result status="valid" time="0.156398" steps="72053"/></proof>
 </goal>
 <goal name="is_not_normal_interp" proved="true">
 <proof prover="2"><result status="valid" time="0.155409" steps="55987"/></proof>
 </goal>
</theory>
<theory name="Paired" proved="true">
 <goal name="non_paired_symm" proved="true">
 <proof prover="2"><result status="valid" time="0.003947" steps="1009"/></proof>
 </goal>
</theory>
</file>
</why3session>
